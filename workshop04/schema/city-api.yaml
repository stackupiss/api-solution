openapi: "3.0.3"

info:
    title: "Cities API"
    description: "My API for US postal code"
    version: "v1.0"

servers:
- url: http://localhost:3000
  description: My development server

components:
    schemas:
        error:
            type: object
            properties:
                error:
                    type: string
            required:
            - error
        states:
            type: string
            enum: [ "MA", "RI", "NH", "ME", "VT", "CT", "NY", "NJ", 
                    "PA", "DE", "DC", "MD", "VA", "WV", "NC", "SC", 
                    "GA", "FL", "AL", "TN", "MS", "KY", "OH", "IN", 
                    "MI", "IA", "WI", "MN", "SD", "ND", "MT", "IL", 
                    "MO", "KS", "NE", "LA", "AR", "OK", "TX", "CO", 
                    "WY", "ID", "UT", "AZ", "NM", "NV", "CA", "HI", 
                    "OR", "WA", "AK" ]
        city-form:
            type: object
            properties:
                city:
                    type: string
                    description: City name
                "loc[0]":
                    type: number
                    description: Latitude
                "loc[1]":
                    type: number
                    description: Longitude
                pop:
                    type: number
                    description: City's population
                    minimum: 300
                state:
                    description: States
                    type: string
                    enum: [ "MA", "RI", "NH", "ME", "VT", "CT", "NY", "NJ", 
                            "PA", "DE", "DC", "MD", "VA", "WV", "NC", "SC", 
                            "GA", "FL", "AL", "TN", "MS", "KY", "OH", "IN", 
                            "MI", "IA", "WI", "MN", "SD", "ND", "MT", "IL", 
                            "MO", "KS", "NE", "LA", "AR", "OK", "TX", "CO", 
                            "WY", "ID", "UT", "AZ", "NM", "NV", "CA", "HI", 
                            "OR", "WA", "AK" ]
            required: [ "city", "loc[0]", "loc[1]", "pop", "state" ]

paths:
    /api/city:
        post:
            description: Add a city 
            operationId: addCity
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/city-form"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/city-form"

            responses:
                201:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/city-form"
                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/error"

    /api/state/{stateId}:
        get:
            description: Return a list of cities from the state
            operationId: getCitesFromState
            parameters:
            - name: stateId
              in: path
              required: true
              schema:
                $ref: "#/components/schemas/states"

            responses:
                200:
                    description: Success
                    content:
                        applications/json:
                            schema:
                                type: array
                                items:
                                    type: string

    /api/states:
        get:
            description: Return a list of valid 2 character states
            operationId: getStates
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/states"
                400:
                    description: Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/error"

    /schema/{schemaFile}:
        get:
            description: Get the schema
            operationId: getSchema
            parameters:
            - name: schemaFile
              in: path
              required: true
              schema:
                type: string

            responses: 
               200:
                   description: Success
                   content:
                       'text/*':
                          schema:
                             type: string
               404:
                   description: Not found
